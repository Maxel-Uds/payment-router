version: '3.8'

services:
  postgres:
    image: postgres:16
    hostname: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payment_db
    ports:
      - "5432:5432"
    volumes:
      - ./init-processor.sql:/docker-entrypoint-initdb.d/init-processor.sql
    networks:
      - payment-router
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100MB"

  api01: &api
    image: quarkus-payment-router:latest
    container_name: api1
    hostname: api01
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      THREAD_POOL: 15
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/payment_db
      QUARKUS_REST_CLIENT_PROVIDER_A_API_URL: http://payment-processor-default:8080
      QUARKUS_REST_CLIENT_PROVIDER_B_API_URL: http://payment-processor-fallback:8080
      REDIS_HOST: redis://health-cache:6379
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "100MB"
    networks:
      - payment-router
      - payment-processor
  api02:
    <<: *api
    hostname: api02
    container_name: api2
    ports:
      - "8082:8080"

  nginx:
    image: nginx:latest
    container_name: load_balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"
    networks:
      - payment-router

networks:
  payment-router:
    driver: bridge
  payment-processor:
    external: true