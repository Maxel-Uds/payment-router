worker_processes 1;
events {
    worker_connections 1024;
}

http {
    access_log off;
    lua_shared_dict lb_counter 1m;
    resolver 127.0.0.11 ipv6=off;
    lua_shared_dict balancer 1m;

    server {
        listen 9999;

        location /payments {
            content_by_lua_block {
                local http = require "resty.http"
                local lb_dict = ngx.shared.lb_counter
                local counter, _ = lb_dict:incr("counter", 1, 0)
                local backends = { "api01", "api02" }
                local target_host = backends[(counter % #backends) + 1]
                local target_url = string.format("http://%s:8080/payments", target_host)

                ngx.req.read_body()
                local body = ngx.req.get_body_data()
                local headers = ngx.req.get_headers()
                local content_type = headers["content-type"] or "application/json"

                ngx.timer.at(0, function(_, body, content_type, target_url)
                    local httpc = http.new()
                    httpc:set_timeout(1000)
                    httpc:request_uri(target_url, {
                        method = "POST",
                        body = body,
                        headers = {
                            ["Content-Type"] = content_type
                        }
                    })
                end, body, content_type, target_url)

                ngx.say("Pagamento recebido para processamento")
                return ngx.exit(200)
            }
        }

        location /payments-summary {
            proxy_pass http://api01:8080;
        }
    }
}
